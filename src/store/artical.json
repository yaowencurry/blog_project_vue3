[
  {
    "id": "ART99188902115",
    "title": "操作DOM节点常用的4种方法及克隆DOM节点的方法",
    "ctime": "2020/12/14 上午10:41:04",
    "author": "yaowen",
    "count": "9898",
    "timer": "4min",
    "detail": "父节点调用此方法，传入的新节点，将插入到最后一个节点的后面。 父节点调用此方法，接受两个参数：要插入的节点和参照的节点，插入节点后，插入的新节点会作为参照节点的兄弟节点，在...",
    "prew": "1403",
    "save": "0",
    "comment": "9047",
    "isSave": "0",
    "content": "<h1 id=\"1dom\">1、常用的操作DOM节点方法：</h1>\n<h2 id=\"appendchild\">appendChild()</h2>\n<p>父节点调用此方法，传入的新节点，将插入到最后一个节点的后面。</p>\n<pre><code>var returnedNode = someNode.appendChild(newNode); \nalert(returnedNode == newNode); //true \nalert(someNode.lastChild == newNode); //true\n</code></pre>\n<h2 id=\"insertbefore\">insertBefore()</h2>\n<p>父节点调用此方法，接受两个参数：要插入的节点和参照的节点，插入节点后，插入的新节点会作为参照节点的兄弟节点，在参照节点的前一个展示。如果参照节点是null，则和appendChild()方法一样，插入到最后一个。</p>\n<pre><code>returnedNode = someNode.insertBefore(newNode, null); \nalert(newNode == someNode.lastChild); //true\n\nvar returnedNode = someNode.insertBefore(newNode, someNode.firstChild); \nalert(returnedNode == newNode); //true\nalert(newNode == someNode.firstChild); //true\n\nreturnedNode = someNode.insertBefore(newNode, someNode.lastChild); \nalert(newNode == someNode.childNodes[someNode.childNodes.length-2]); //true\n</code></pre>\n<h2 id=\"replacechild\">replaceChild()</h2>\n<p>替换节点，此方法接收两个参数：新节点和要替换的节点，返回要替换的节点。</p>\n<pre><code>var returnedNode = someNode.replaceChild(newNode, someNode.firstChild);\n\nreturnedNode = someNode.replaceChild(newNode, someNode.lastChild);\n</code></pre>\n<h2 id=\"removechild\">removeChild()</h2>\n<p>移除某一个节点，传入要移除的节点。</p>\n<pre><code>var formerFirstChild = someNode.removeChild(someNode.firstChild);\n\nvar formerLastChild = someNode.removeChild(someNode.lastChild);\n</code></pre>\n<p><strong>以上四个方法，都是操作的某个节点的字节点，所以要先获取到父节点，然后父节点调用方法，操作其子节点。</strong></p>\n<h1 id=\"\">克隆节点的方法</h1>\n<h2 id=\"clonenode\">cloneNode()</h2>\n<p>此方法接受一个布尔值的参数，true表示深复制，复制整个节点树及其子节点，false表示浅复制，仅复制当前节点本身。</p>\n<pre><code>&lt;ul&gt;\n    &lt;li&gt;item 1&lt;/li&gt;\n    &lt;li&gt;item 2&lt;/li&gt;\n    &lt;li&gt;item 3&lt;/li&gt;\n &lt;/ul&gt;\n //假设以上节点保存在变量myList中\n var deepList = myList.cloneNode(true);\n alert(deepList.childNodes.length); //3（IE&lt;9）或7（其他浏览器）\n\n var shallowList = myList.cloneNode(false);\n alert(shallowList.childNodes.length);\n</code></pre>\n<p>上面的例子中，deepList中保存了mList执行深复制拷贝的节点，所有将其子节点一并全部复制；而shallowList是执行浅复制拷贝的节点，只复制了ul本身，所以其childNodes长度为0。</p>"
  },
  {
    "id": "ART55995941512",
    "title": "TypeScript + uniApp + uView 搭建微信小程序项目框架",
    "ctime": "2020/12/14 下午1:55:04",
    "author": "yaowen",
    "count": "9898",
    "timer": "3min",
    "detail": "一、创建 uniapp 项目vue create -p dcloudio/uni-preset-vue ts-uni-mini(这里是项目名称）选择 默认模版（TypeScript)\n创建完进入项目\ncd ts-uni-mini\n二、在新项目的vue文件中使用内联ts\n按需引入vue装饰器\nimport { Component,Vue ,Watch} from \"vue-property-decorator\";\n不管干啥先把下面这句话加上。",
    "prew": "302",
    "save": "0",
    "comment": "3803",
    "isSave": "0",
    "content": "<h6 id=\"important\">IMPORTANT：此文章仅仅作为自己搭建此项目框架的记录而已</h6>\n<h3 id=\"uniapp\">一、创建 uniapp 项目</h3>\n<p><code>vue create -p dcloudio/uni-preset-vue ts-uni-mini</code>(这里是项目名称）</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a1b40d53b59e429b96e0966e9110d36b~tplv-k3u1fbpfcp-watermark.image\" alt=\"alt 属性文本\" /></p>\n<p>选择 默认模版（<code>TypeScript</code>)\n创建完进入项目\n<code>cd ts-uni-mini</code></p>\n<h3 id=\"vuets\">二、在新项目的vue文件中使用内联ts</h3>\n<p>按需引入vue装饰器</p>\n<p><code>import { Component,Vue ,Watch} from \"vue-property-decorator\";</code></p>\n<p>不管干啥先把下面这句话加上。</p>\n<p><code>@Component({})</code> //必须</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/268be247416642f29e5920550a3b7dc4~tplv-k3u1fbpfcp-watermark.image\" alt=\"alt 属性文本\" /></p>\n<p>启动项目 <code>npm run dev:mp-weixin</code></p>\n<h3 id=\"\">三、打开微信开发者工具</h3>\n<p>导入项目</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d29bb5ff6e7e4cb4adb66bc110f0c1fd~tplv-k3u1fbpfcp-watermark.image\" alt=\"alt 属性文本\" /></p>\n<p>选择导入的项目</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/564b01d11c184c06b60e75610c3f2bc8~tplv-k3u1fbpfcp-watermark.image\" alt=\"alt 属性文本\" /></p>\n<p>项目启动成功</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/02a1b28db1814a9bbaf601732d52b8d3~tplv-k3u1fbpfcp-watermark.image\" alt=\"alt 属性文本\" /></p>\n<h3 id=\"uview\">四、引入 uView</h3>\n<h4 id=\"1uview\">1、安装<code>uView</code></h4>\n<pre><code>npm install uview-ui\n</code></pre>\n<h4 id=\"2sfcdts\">2、在 sfc.d.ts 文件添加声明</h4>\n<pre><code>declare module 'uview-ui'\n</code></pre>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/14af876f412c463c9e5bcf7bd68cafcc~tplv-k3u1fbpfcp-watermark.image\" alt=\"alt 属性文本\" /></p>\n<h4 id=\"3uviewjs\">3、引入uView主JS库</h4>\n<p>在项目根目录中的main.ts中，引入并使用uView的JS库，注意这两行要放在import Vue之后。</p>\n<pre><code>// main.ts import uView from \"uview-ui\"; Vue.use(uView);\n</code></pre>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9734e605c57a450b9787082dd8bed35b~tplv-k3u1fbpfcp-watermark.image\" alt=\"alt 属性文本\" /></p>\n<h4 id=\"4uviewscss\">4、在引入uView的全局SCSS主题文件</h4>\n<p>在项目根目录的uni.scss中引入此文件。 </p>\n<pre><code>/* uni.scss */ @import 'uview-ui/theme.scss';\n</code></pre>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/75602f4dd1224e11aed060809021712a~tplv-k3u1fbpfcp-watermark.image\" alt=\"alt 属性文本\" /></p>\n<h4 id=\"5appvueuview\">5、在 App.vue 引入uView基础样式</h4>\n<p>/* 注意要写在第一行，同时给style标签加入lang=\"scss\"属性 */ @import \"uview-ui/index.scss\";</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2a70ea7252c549cd92d43804148b9d41~tplv-k3u1fbpfcp-watermark.image\" alt=\"alt 属性文本\" /></p>\n<h4 id=\"5easycom\">5、配置easycom组件模式</h4>\n<p>此配置需要在项目根目录的pages.json中进行。\n温馨提示\nuni-app为了调试性能的原因，修改easycom规则不会实时生效，配置完后，您需要重启HX或者重新编译项目才能正常使用uView的功能。\n请确保您的pages.json中只有一个easycom字段，否则请自行合并多个引入规则。</p>\n<pre><code>// pages.json\n   {\n     \"easycom\": {\n     \"^u-(.*)\": \"uview-ui/components/u-1/u−1/u-1/u−1.vue\"\n    }\n}\n</code></pre>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/efffa62268dd4e2a8567fb1ca799b98b~tplv-k3u1fbpfcp-watermark.image\" alt=\"alt 属性文本\" /></p>\n<h3 id=\"-1\">五、请求封装目录如下</h3>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6863d8edfa6a4eb7810d85b904ad7619~tplv-k3u1fbpfcp-watermark.image\" alt=\"alt 属性文本\" /></p>"
  },
  {
    "id": "ART68730766064",
    "title": "UNI-APP Android端本地打包全流程",
    "ctime": "2020/12/15 下午4:55:20",
    "author": "yaowen",
    "count": "120",
    "timer": "4min",
    "detail": "Android Studio 下载地址：Android Studio官网 OR Android Studio中文社区\nHBuilderX\nApp离线SDK下载：最新android平台SDK下载\n",
    "prew": "9371",
    "save": "0",
    "comment": "8054",
    "isSave": "0",
    "content": "<p><strong>UNIAPP本地打包官网：<a href=\"https://nativesupport.dcloud.net.cn/AppDocs/usesdk/android\">Android原生工程配置</a></strong></p>\n<h3 id=\"\">一、配置本地开发环境</h3>\n<p>1、Android Studio：下载地址：<a href=\"https://developer.android.google.cn/studio/index.html\">Android Studio官网</a><br />\n2、<a href=\"https://www.dcloud.io/hbuilderx.html\">HBuilderX </a><br />\n3、App离线SDK下载：<a href=\"https://nativesupport.dcloud.net.cn/AppDocs/download/android\">最新android平台SDK下载</a></p>\n<h3 id=\"-1\">二、新建工程</h3>\n<h4 id=\"1androidstudio\">1、打开Android studio新建一个空白项目</h4>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5ca12878b1e948e28c9df7da8c589a4b~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/602e139a24704e358e5ae570fbc7c7d0~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>\n<h3 id=\"-2\">三、配置工程</h3>\n<h4 id=\"1project\">1、首先切换到<code>project</code>目录下</h4>\n<p><img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6c69081a9ed7460d91e7762722e42a0f~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>\n<h4 id=\"2appbuildgradle\">2、配置打包信息（app/build.gradle）</h4>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/20919502d2af4e9495fa6ad617117bfe~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>\n<p>作者配置的基础的<code>build.gradle</code>，仅供参考</p>\n<pre><code>plugins {\n    id 'com.android.application'\n}\n\nandroid {\n    compileSdkVersion 30\n    buildToolsVersion \"30.0.3\"\n\n    defaultConfig {\n        applicationId \"xxxxx\"   //包名\n        minSdkVersion 21\n        targetSdkVersion 30\n        versionCode 29\n        versionName \"2.0.29\"\n        multiDexEnabled true\n//        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n//    compileOptions {\n//        sourceCompatibility JavaVersion.VERSION_1_8\n//        targetCompatibility JavaVersion.VERSION_1_8\n//    }\n    aaptOptions {\n        additionalParameters '--auto-add-overlay'\n        ignoreAssetsPattern \"!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~\"\n    }\n}\n\ndependencies {\n\n    implementation 'androidx.appcompat:appcompat:1.1.0'\n    implementation 'com.google.android.material:material:1.1.0'\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\n    testImplementation 'junit:junit:4.+'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\n    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])\n    //noinspection GradleCompatible\n    implementation \"com.android.support:support-v4:28.0.0\"\n    //noinspection GradleCompatible\n    implementation \"com.android.support:appcompat-v7:28.0.0\"\n    //noinspection GradleCompatible\n    implementation 'com.android.support:recyclerview-v7:28.0.0'\n    implementation 'com.facebook.fresco:fresco:1.13.0'\n    implementation \"com.facebook.fresco:animated-gif:1.13.0\"\n    implementation 'com.github.bumptech.glide:glide:4.9.0'\n    implementation 'com.alibaba:fastjson:1.1.46.android'\n}\n</code></pre>\n<h4 id=\"3\">3、配置应用名称</h4>\n<p>打开app-&gt; src -&gt; main -&gt; res -&gt; values -&gt; strings.xml文件，修改“app_name”字段值，该值为安装到手机上桌面显示的应用名称，建议与manifest.json中name（基础配置中的应用名称）对应。</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/80fbef64ff0f43f28c207533871fbdc5~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>\n<h4 id=\"4provider\">4、配置应用启动页及provider节点</h4>\n<p><strong>注意：新建的项目默认会有一个MainActivity的节点，必须删掉！</strong></p>\n<p>基础启动页配置代码，仅供参考：</p>\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"${xxx}\"&gt;\n    &lt;uses-permission android:name=\"android.permission.USE_FINGERPRINT\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.GET_ACCOUNTS\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.WRITE_CONTACTS\"/&gt;\n    &lt;uses-permission android:name=\"android.permission.READ_CONTACTS\"/&gt;\n    &lt;application\n        android:allowBackup=\"true\"\n        android:icon=\"@drawable/icon\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.MyApplication\"&gt;\n        &lt;activity\n            android:name=\"io.dcloud.PandoraEntry\"\n            android:configChanges=\"orientation|keyboardHidden|keyboard|navigation\"\n            android:label=\"@string/app_name\"\n            android:launchMode=\"singleTask\"\n            android:hardwareAccelerated=\"true\"\n            android:theme=\"@style/TranslucentTheme\"\n            android:screenOrientation=\"user\"\n            android:windowSoftInputMode=\"adjustResize\" &gt;\n            &lt;intent-filter&gt;\n                &lt;action android:name=\"android.intent.action.MAIN\" /&gt;\n                &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt;\n            &lt;/intent-filter&gt;\n        &lt;/activity&gt;\n        &lt;activity\n            android:name=\"io.dcloud.PandoraEntryActivity\"\n            android:launchMode=\"singleTask\"\n            android:configChanges=\"orientation|keyboardHidden|screenSize|mcc|mnc|fontScale|keyboard\"\n            android:hardwareAccelerated=\"true\"\n            android:permission=\"com.miui.securitycenter.permission.AppPermissionsEditor\"\n            android:screenOrientation=\"user\"\n            android:theme=\"@style/DCloudTheme\"\n            android:windowSoftInputMode=\"adjustResize\"&gt;\n            &lt;intent-filter&gt;\n                &lt;category android:name=\"android.intent.category.DEFAULT\" /&gt;\n                &lt;category android:name=\"android.intent.category.BROWSABLE\" /&gt;\n                &lt;action android:name=\"android.intent.action.VIEW\" /&gt;\n                &lt;data android:scheme=\"h56131bcf\" /&gt;\n            &lt;/intent-filter&gt;\n        &lt;/activity&gt;\n        &lt;!--provider节点必须添加--&gt;\n        &lt;provider\n            android:name=\"io.dcloud.common.util.DCloud_FileProvider\"\n            android:authorities=\"${xxx}.dc.fileprovider\"\n            android:exported=\"false\"\n            android:grantUriPermissions=\"true\"&gt;\n            &lt;meta-data\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\n                android:resource=\"@xml/dcloud_file_provider\" /&gt;\n        &lt;/provider&gt;\n    &lt;/application&gt;\n\n&lt;/manifest&gt;\n</code></pre>\n<p>注意：${xxx}为包名</p>\n<h4 id=\"5\">5、配置应用图标和启动界面</h4>\n<blockquote>\n  <p>icon.png为应用的图标。push.png为推送消息的图标。  splash.png为应用启动页的图标。</p>\n</blockquote>\n<p>注意：图表相关尺寸，请自行百度。</p>\n<p><img src=\"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d14bb0fec5e542bda5eec344d546b917~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>\n<p>修改Androidmanifest.xml中application节点的icon属性为@drawable/icon</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e7cf101475d24845ba0832f90cbb4962~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>\n<h4 id=\"6\">6、资源配置</h4>\n<p>Android studio默认项目没有assets文件夹，需手动创建，创建位置与java目录同级。</p>\n<ul>\n<li><p>创建data文件夹并拷贝资源：将SDK-&gt;assets-&gt;data文件夹拷贝到刚刚创建的assets文件夹下，如下图：\n<img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0792780a86084c3a9a11f942cb05a71b~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p></li>\n<li><p>创建apps文件夹并拷贝资源：将HBuilderX中的项目导出，将导出的资源复制到assets-&gt;apps下，如下图所示：</p></li>\n</ul>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4dbaa9e727bb4a7a90f8180cb45074dd~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c7411de54d924cf0839dec101d59ce67~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>\n<ul>\n<li>修改dcloud<em>control.xml文件：修改dcloud</em>control.xml中的appid为拷贝过来的5+APP的id，确保dcloud_control.xml中的appid与manifest.json中的id与文件夹名一致，如下图所示：</li>\n</ul>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b9bcb32d7eed40238f2980378da64064~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>\n<p>至此，所有的工程配置已完成，可以连上手机USB调试，运行项目，如果可以成功在手机上打开app，则证明配置成功，运行项目如下：\n<img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2cc8c9fa533f4127b292b2c8b2eb84dd~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>\n<h3 id=\"-3\">三、应用打包</h3>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e8b4642e9b9c4560a9739923878803d2~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" />\n<img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0d8e4802ecf148219f5114d8bbdfe2a5~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" />\n<img src=\"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cba51946a43b4bfd816d6e8538a8be32~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" />\n<img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1f3ccfd8f2ac47bca185b772ce395514~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" />\n<img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8e4711be3cba4cc1b33744be5331d69b~tplv-k3u1fbpfcp-watermark.image\" alt=\"\" /></p>",
    "markDownCode": "\n**UNIAPP本地打包官网：[Android原生工程配置](https://nativesupport.dcloud.net.cn/AppDocs/usesdk/android)**\n\n### 一、配置本地开发环境\n\n1、Android Studio：下载地址：[Android Studio官网](https://developer.android.google.cn/studio/index.html)  \n2、[HBuilderX ](https://www.dcloud.io/hbuilderx.html)  \n3、App离线SDK下载：[最新android平台SDK下载](https://nativesupport.dcloud.net.cn/AppDocs/download/android)\n\n### 二、新建工程  \n#### 1、打开Android studio新建一个空白项目\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5ca12878b1e948e28c9df7da8c589a4b~tplv-k3u1fbpfcp-watermark.image)\n\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/602e139a24704e358e5ae570fbc7c7d0~tplv-k3u1fbpfcp-watermark.image)\n\n### 三、配置工程\n#### 1、首先切换到`project`目录下\n\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6c69081a9ed7460d91e7762722e42a0f~tplv-k3u1fbpfcp-watermark.image)\n\n#### 2、配置打包信息（app/build.gradle）\n\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/20919502d2af4e9495fa6ad617117bfe~tplv-k3u1fbpfcp-watermark.image)\n\n作者配置的基础的`build.gradle`，仅供参考\n```\nplugins {\n    id 'com.android.application'\n}\n\nandroid {\n    compileSdkVersion 30\n    buildToolsVersion \"30.0.3\"\n\n    defaultConfig {\n        applicationId \"xxxxx\"   //包名\n        minSdkVersion 21\n        targetSdkVersion 30\n        versionCode 29\n        versionName \"2.0.29\"\n        multiDexEnabled true\n//        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n//    compileOptions {\n//        sourceCompatibility JavaVersion.VERSION_1_8\n//        targetCompatibility JavaVersion.VERSION_1_8\n//    }\n    aaptOptions {\n        additionalParameters '--auto-add-overlay'\n        ignoreAssetsPattern \"!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~\"\n    }\n}\n\ndependencies {\n\n    implementation 'androidx.appcompat:appcompat:1.1.0'\n    implementation 'com.google.android.material:material:1.1.0'\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\n    testImplementation 'junit:junit:4.+'\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\n    implementation fileTree(dir: 'libs', include: ['*.aar', '*.jar'], exclude: [])\n    //noinspection GradleCompatible\n    implementation \"com.android.support:support-v4:28.0.0\"\n    //noinspection GradleCompatible\n    implementation \"com.android.support:appcompat-v7:28.0.0\"\n    //noinspection GradleCompatible\n    implementation 'com.android.support:recyclerview-v7:28.0.0'\n    implementation 'com.facebook.fresco:fresco:1.13.0'\n    implementation \"com.facebook.fresco:animated-gif:1.13.0\"\n    implementation 'com.github.bumptech.glide:glide:4.9.0'\n    implementation 'com.alibaba:fastjson:1.1.46.android'\n}\n```\n\n#### 3、配置应用名称\n\n打开app-> src -> main -> res -> values -> strings.xml文件，修改“app_name”字段值，该值为安装到手机上桌面显示的应用名称，建议与manifest.json中name（基础配置中的应用名称）对应。\n\n![](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/80fbef64ff0f43f28c207533871fbdc5~tplv-k3u1fbpfcp-watermark.image)\n\n#### 4、配置应用启动页及provider节点\n\n**注意：新建的项目默认会有一个MainActivity的节点，必须删掉！**\n\n基础启动页配置代码，仅供参考：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"${xxx}\">\n    <uses-permission android:name=\"android.permission.USE_FINGERPRINT\"/>\n    <uses-permission android:name=\"android.permission.GET_ACCOUNTS\"/>\n    <uses-permission android:name=\"android.permission.WRITE_CONTACTS\"/>\n    <uses-permission android:name=\"android.permission.READ_CONTACTS\"/>\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@drawable/icon\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.MyApplication\">\n        <activity\n            android:name=\"io.dcloud.PandoraEntry\"\n            android:configChanges=\"orientation|keyboardHidden|keyboard|navigation\"\n            android:label=\"@string/app_name\"\n            android:launchMode=\"singleTask\"\n            android:hardwareAccelerated=\"true\"\n            android:theme=\"@style/TranslucentTheme\"\n            android:screenOrientation=\"user\"\n            android:windowSoftInputMode=\"adjustResize\" >\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity\n            android:name=\"io.dcloud.PandoraEntryActivity\"\n            android:launchMode=\"singleTask\"\n            android:configChanges=\"orientation|keyboardHidden|screenSize|mcc|mnc|fontScale|keyboard\"\n            android:hardwareAccelerated=\"true\"\n            android:permission=\"com.miui.securitycenter.permission.AppPermissionsEditor\"\n            android:screenOrientation=\"user\"\n            android:theme=\"@style/DCloudTheme\"\n            android:windowSoftInputMode=\"adjustResize\">\n            <intent-filter>\n                <category android:name=\"android.intent.category.DEFAULT\" />\n                <category android:name=\"android.intent.category.BROWSABLE\" />\n                <action android:name=\"android.intent.action.VIEW\" />\n                <data android:scheme=\"h56131bcf\" />\n            </intent-filter>\n        </activity>\n        <!--provider节点必须添加-->\n        <provider\n            android:name=\"io.dcloud.common.util.DCloud_FileProvider\"\n            android:authorities=\"${xxx}.dc.fileprovider\"\n            android:exported=\"false\"\n            android:grantUriPermissions=\"true\">\n            <meta-data\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\n                android:resource=\"@xml/dcloud_file_provider\" />\n        </provider>\n    </application>\n\n</manifest>\n```\n注意：${xxx}为包名\n\n\n#### 5、配置应用图标和启动界面\n\n> icon.png为应用的图标。push.png为推送消息的图标。  splash.png为应用启动页的图标。\n\n注意：图表相关尺寸，请自行百度。\n\n![](https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d14bb0fec5e542bda5eec344d546b917~tplv-k3u1fbpfcp-watermark.image)\n\n修改Androidmanifest.xml中application节点的icon属性为@drawable/icon\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e7cf101475d24845ba0832f90cbb4962~tplv-k3u1fbpfcp-watermark.image)\n\n\n#### 6、资源配置\nAndroid studio默认项目没有assets文件夹，需手动创建，创建位置与java目录同级。\n\n* 创建data文件夹并拷贝资源：将SDK->assets->data文件夹拷贝到刚刚创建的assets文件夹下，如下图：\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0792780a86084c3a9a11f942cb05a71b~tplv-k3u1fbpfcp-watermark.image)\n\n* 创建apps文件夹并拷贝资源：将HBuilderX中的项目导出，将导出的资源复制到assets->apps下，如下图所示：\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4dbaa9e727bb4a7a90f8180cb45074dd~tplv-k3u1fbpfcp-watermark.image)\n\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c7411de54d924cf0839dec101d59ce67~tplv-k3u1fbpfcp-watermark.image)\n\n* 修改dcloud_control.xml文件：修改dcloud_control.xml中的appid为拷贝过来的5+APP的id，确保dcloud_control.xml中的appid与manifest.json中的id与文件夹名一致，如下图所示：\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b9bcb32d7eed40238f2980378da64064~tplv-k3u1fbpfcp-watermark.image)\n\n\n至此，所有的工程配置已完成，可以连上手机USB调试，运行项目，如果可以成功在手机上打开app，则证明配置成功，运行项目如下：\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2cc8c9fa533f4127b292b2c8b2eb84dd~tplv-k3u1fbpfcp-watermark.image)\n\n### 三、应用打包\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e8b4642e9b9c4560a9739923878803d2~tplv-k3u1fbpfcp-watermark.image)\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0d8e4802ecf148219f5114d8bbdfe2a5~tplv-k3u1fbpfcp-watermark.image)\n![](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cba51946a43b4bfd816d6e8538a8be32~tplv-k3u1fbpfcp-watermark.image)\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1f3ccfd8f2ac47bca185b772ce395514~tplv-k3u1fbpfcp-watermark.image)\n![](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8e4711be3cba4cc1b33744be5331d69b~tplv-k3u1fbpfcp-watermark.image)"
  }
]